<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>napalmman_stand</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>enemyparent</parentName>
  <maskName>msk_boss1</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Bosses work mostly like enemies; just note the differences here and there
//when making new ones.
SPRITE_INTRO = napalmman_intro;
mypower = 5;

image_speed = 0;
paused = 0;
onscreen = 1;
canhit = 0;
froze = 0;
flashing = 0;
flashloop = 0;


hsp = 0;
vsp = 0;
grounded = 1;
grav = 0.8;

jumping = 0;
shoot = 0;
shooting = 0;
alarmshoot = 1;
alarmshooting = -1;
alarmjump = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Flashing

if (flashloop &gt; 0)
{
alarm[7] = 1;
flashloop -= 1;
if (visible == 0) {visible = 1; with (hitspark) {instance_destroy();} exit;}
if (visible == 1) {visible = 0; instance_create(x,y,hitspark); exit;}
}
else 
{
flashloop = 0;
flashing = 0;
visible = 1;
with (hitspark) {instance_destroy();}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (paused) exit;

//Face Player
if (jumping &lt; 2)
{
    if (x &lt; proto.x) {image_xscale = -1; }
    else {image_xscale = 1; }
}

//Alarm - Shoot
if (alarmshoot &gt; -1) 
{
    alarmshoot -= 1;
    if (alarmshoot == 0) 
    {
        if ((image_xscale == 1 &amp;&amp; x-80 &gt; proto.x) || (image_xscale == -1 &amp;&amp; x+80 &lt; proto.x))
        {
            //Shoot Missiles
            shoot = 1;
            sprite_index = napalmman_shoot1;
            image_index = 0;
            alarmshooting = 2;
        }
        else
        {
            //Launch Bombs
            shoot = 2;
            sprite_index = napalmman_shoot2;
            image_index = 0;
            alarmshooting = 5;
        }
    }
}

//Alarm - Shooting
if (alarmshooting &gt; -1) 
{
    alarmshooting -= 1;
    if (alarmshooting == 0) 
    {
        if (shooting == 3) //Finished
        {
            sprite_index = napalmman_stand;
            alarmjump = 5;
            shooting = 0;
        }
        else if (shoot == 1) //Missiles
        {
            alarmshooting = 2;
            image_index += 1;
            if (image_index == 2) 
            {
                if (image_xscale == 1) instance_create(x-8,y-24,napalmman_bullet1); 
                else instance_create(x+8,y-24,napalmman_bullet1); 
            }
            if (image_index == 4) {shooting += 1; image_index = 0; alarmshooting = 11; }
        }
        else if (shoot == 2) //Bombs
        {
            alarmshooting = 5;
            image_index += 1;
            if (image_index == 1) 
            {
                if (image_xscale == 1) {instance_create(x+2,y-27,napalmman_bullet2); instance_create(x-10,y-27,napalmman_bullet2); }
                else {instance_create(x-2,y-27,napalmman_bullet2); instance_create(x+10,y-27,napalmman_bullet2); }
            }
            if (image_index == 3) {shooting = 3; alarmshooting = 17; }
        }
    }
}

//Alarm - Jump
if (alarmjump &gt; -1) 
{
    alarmjump -= 1;
    if (alarmjump == 0) 
    {
        if (jumping == 0) {jumping = 1; image_index = 1; alarmjump = 3; }
        else 
        {
            jumping = 2; 
            image_index = 2;
            
            vsp = choose(-8,-10);
            if (image_xscale == -1) hsp = choose(3,5);
            else hsp = choose(-3,-5);
        }
    }
}


if (froze == 0 &amp;&amp; paused == 0)
{
//Block collision - X
if (instance_place(x+hsp,y,block))
{
    if (hsp!=0 &amp;&amp; (instance_place(x+hsp,y,block)).issolid == 1) 
    {
        while (!place_meeting(x+sign(hsp),y,block)) {x+=sign(hsp);}
        hsp=0; x=floor(x);
    }
}
x+=hsp;

//Check if in air
if (!collision_rectangle(x-9,y-2,x+9,y+1,block,true,true)) {grounded=0; }

//Set gravity
if (grounded == 0 &amp;&amp; shooting == 0) {vsp+=grav;}
if (vsp &gt;= 12) {vsp = 12;}

//Block collision - Y
if (instance_place(x,y+vsp,block) &amp;&amp; vsp&lt;0)
{
    while (!place_meeting(x,y+sign(vsp),block)) {y+=sign(vsp);}
    vsp=0;
}
if (instance_place(x,y+vsp,block) &amp;&amp; vsp&gt;0)
{
    y=round(y);
    while (!place_meeting(x,y+sign(vsp),block)) {y+=sign(vsp);}
    grounded=1; 
    vsp = 0; hsp = 0;
    
    jumping = 0;
    image_index = 1;
    alarmshoot = 5;
}
y+=vsp;

}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This is the same for most bosses, except remember to change the
//'napalmman.dexpcount' to have the name of the new boss object

if (boss_energybar.bosshealth &lt;= 0) 
{
    sound_stop(sfx_death); sound_play(sfx_death);
    sound_stop(sfx_enemyhit);
    music_stop();
    dexpcount = 0;
    repeat(8) {
        dexpcount+=45;
        dexp = instance_create(x,y,proto_explosion); 
        with (dexp) {motion_set(napalmman.dexpcount,1.4);}
    }
    dexpcount = 0;
    repeat(8) {
        dexpcount+=45;
        dexp = instance_create(x,y,proto_explosion); 
        with (dexp) {motion_set(napalmman.dexpcount,2.8);}
    }
    with (enemyparent) {instance_destroy();}
    with (boss_energybar) 
    {
        alarm[0] = room_speed*5;
        rx = other.rx;
        ry = other.ry;
        SPRITE_INTRO = other.SPRITE_INTRO;
    }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="bulletparent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (froze == 0 &amp;&amp; onscreen == 1 &amp;&amp; canhit == 0 &amp;&amp; other.ricochet == 0)
{
//with (other) {event_user(0); exit; }

sound_stop(sfx_enemyhit); sound_play(sfx_enemyhit); 
sound_stop(sfx_shoot1); sound_stop(sfx_shoot2); sound_stop(sfx_shoot3);
sound_stop(sfx_gyroattack);

if (flashing == 0)
{
flashing = 1;
visible = 0;
alarm[7] = 1;
instance_create(x,y,hitspark);
flashloop = 29;
switch (other.object_index)
{
    case proto_bullet1:
    case proto_bullet2:     boss_energybar.bosshealth -= 1; break;
    case proto_bullet3:     boss_energybar.bosshealth -= global.csp; break;
    case crystal_bullet1:   
    case crystal_bullet2:   boss_energybar.bosshealth -= 3; break;
    case napalm_bullet1:    
    case napalm_bullet2:    boss_energybar.bosshealth -= 1; break;
    case star_bullet1:      boss_energybar.bosshealth -= 1; break;
    case gyro_bullet1:      boss_energybar.bosshealth -= 1; break;
}
}

//Destroy Bullet
switch (other.object_index)
{
    case proto_bullet1:
    case proto_bullet2: 
    case crystal_bullet1: 
    case crystal_bullet2:
    case gyro_bullet1:
        with (other) instance_destroy(); break;
    case proto_bullet3:
        if (boss_energybar.bosshealth &gt; 0) {with (other) instance_destroy();} break;
    case star_bullet1:
    case napalm_bullet1: 
        with (other) {instance_destroy(); event_user(1);} break;
    case napalm_bullet2: 
        if (boss_energybar.bosshealth &gt; 0) {other.ricochet = 1;} break;
}

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//This stays the same for most bosses
instance_destroy();
ben = instance_create(rx,ry,boss_energyfiller);
ben.sprite_index = SPRITE_INTRO;</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
