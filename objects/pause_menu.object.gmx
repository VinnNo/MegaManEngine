<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_pausemenu</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-960000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Freeze(true);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Freeze(false);</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Freeze(true);

y=view_yview;
x=view_xview;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (menu_cursor) {instance_destroy();}
with (menu_weaponicon) {instance_destroy();}
with (menu_letter) {instance_destroy();}
with (menu_tanks) {instance_destroy();}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>IPR = instance_create(x+32,y+24,menu_weaponicon);
IWA = instance_create(x+32,y+43,menu_weaponicon);
IGY = instance_create(x+32,y+62,menu_weaponicon);
ICR = instance_create(x+32,y+81,menu_weaponicon);
INA = instance_create(x+32,y+100,menu_weaponicon);
IAR = instance_create(x+144,y+24,menu_weaponicon);
IST = instance_create(x+144,y+43,menu_weaponicon);
IGR = instance_create(x+144,y+62,menu_weaponicon);
ICH = instance_create(x+144,y+81,menu_weaponicon);
ISR = instance_create(x+144,y+100,menu_weaponicon);

with (IPR) {img = 0; eng = 'health'; visible = 1;}
with (IWA) {img = 2; eng = 'waveweapon'; if (global.wave_defeated) visible = 1; }
with (IGY) {img = 4; eng = 'gyroweapon'; if (global.gyro_defeated) visible = 1; }
with (ICR) {img = 6; eng = 'crystalweapon'; if (global.crystal_defeated) visible = 1; }
with (INA) {img = 8; eng = 'napalmweapon'; if (global.napalm_defeated) visible = 1; }
with (IAR) {img = 10; eng = 'arrowweapon'; visible = 1;}
with (IST) {img = 12; eng = 'stoneweapon'; if (global.stone_defeated) visible = 1; }
with (IGR) {img = 14; eng = 'gravityweapon'; if (global.gravity_defeated) visible = 1; }
with (ICH) {img = 16; eng = 'chargeweapon'; if (global.charge_defeated) visible = 1; }
with (ISR) {img = 18; eng = 'starweapon'; if (global.star_defeated) visible = 1; }

ET = instance_create(x+24,y+184,menu_tanks);
MT = instance_create(x+80,y+184,menu_tanks);
with (ET) {img = 0; tanktype = 'tanks_e';}
with (MT) {img = 2; tanktype = 'tanks_m';}

instance_create(x,y,menu_cursor);

{
L1 = instance_create(x+64,y+136,menu_letter); with (L1) {myimg=0; letter='letter_1';}
L2 = instance_create(x+80,y+136,menu_letter); with (L2) {myimg=2; letter='letter_2';}
L3 = instance_create(x+96,y+136,menu_letter); with (L3) {myimg=4; letter='letter_3';}
L4 = instance_create(x+112,y+136,menu_letter); with (L4) {myimg=6; letter='letter_4';}
L5 = instance_create(x+128,y+136,menu_letter); with (L5) {myimg=8; letter='letter_5';}
L6 = instance_create(x+144,y+136,menu_letter); with (L6) {myimg=10; letter='letter_6';}
L7 = instance_create(x+160,y+136,menu_letter); with (L7) {myimg=12; letter='letter_7';}
L8 = instance_create(x+176,y+136,menu_letter); with (L8) {myimg=14; letter='letter_8';}
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(spr_pausemenu,0,x,y);
draw_sprite(spr_pausecounter,global.lives,x+225,y+201);

myframe = global.frame_0;

switch (global.currentweapon)
{
    case 'normal':
        myhead = global.head_w0;
        mybody = global.body_w0;
        draw_sprite(spr_weaponbar_dark,global.health,x+128,y+208);
        break;
    case 'stone':
        myhead = global.head_w1;
        mybody = global.body_w1;
        draw_sprite(spr_weaponbar_dark,global.stoneweapon,x+128,y+208);
        break;
    case 'gravity':
        myhead = global.head_w2;
        mybody = global.body_w2;
        draw_sprite(spr_weaponbar_dark,global.gravityweapon,x+128,y+208);
        break;
    case 'crystal':
        myhead = global.head_w3;
        mybody = global.body_w3;
        draw_sprite(spr_weaponbar_dark,global.crystalweapon,x+128,y+208);
        break;
    case 'charge':
        myhead = global.head_w4;
        mybody = global.body_w4;
        draw_sprite(spr_weaponbar_dark,global.chargeweapon,x+128,y+208);
        break;
    case 'napalm':
        myhead = global.head_w5;
        mybody = global.body_w5;
        draw_sprite(spr_weaponbar_dark,global.napalmweapon,x+128,y+208);
        break;
    case 'wave':
        myhead = global.head_w6;
        mybody = global.body_w6;
        draw_sprite(spr_weaponbar_dark,global.waveweapon,x+128,y+208);
        break;
    case 'star':
        myhead = global.head_w7;
        mybody = global.body_w7;
        draw_sprite(spr_weaponbar_dark,global.starweapon,x+128,y+208);
        break;
    case 'gyro':
        myhead = global.head_w8;
        mybody = global.body_w8;
        draw_sprite(spr_weaponbar_dark,global.gyroweapon,x+128,y+208);
        break;
    case 'arrow':
        myhead = global.head_w9;
        mybody = global.body_w9;
        draw_sprite(spr_weaponbar_dark,global.arrowweapon,x+128,y+208);
        break;
}

draw_sprite_ext(proto_stand,0,x+156,y+208,1,1,0,c_white,1);
draw_sprite_ext(proto_stand_frame,0,x+156,y+208,1,1,0,myframe,1);
draw_sprite_ext(proto_stand_head,0,x+156,y+208,1,1,0,myhead,1);
draw_sprite_ext(proto_stand_body,0,x+156,y+208,1,1,0,mybody,1);

draw_sprite_ext(spr_life,0,x+208,y+184,1,1,0,myframe,1);
draw_sprite_ext(spr_life,1,x+208,y+184,1,1,0,myhead,1);
draw_sprite_ext(spr_life,2,x+208,y+184,1,1,0,mybody,1);
draw_sprite_ext(spr_life,3,x+208,y+184,1,1,0,c_white,1);</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
