<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_block</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-970000000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>press_right = 1;
press_left = 1;
press_up = 1;
press_down = 1;
press_a = 1;
press_start = 1;

weaponquestion = global.currentweapon;
canmove = false;
alarmfill = -1;

pm = pause_menu.id;

switch (global.currentweapon)
{
    case 'normal': 
        x = pause_menu.IPR.x; y = pause_menu.IPR.y; break;
    case 'wave': 
        x = pause_menu.IWA.x; y = pause_menu.IWA.y; break;
    case 'gyro': 
        x = pause_menu.IGY.x; y = pause_menu.IGY.y; break;
    case 'crystal': 
        x = pause_menu.ICR.x; y = pause_menu.ICR.y; break;
    case 'napalm': 
        x = pause_menu.INA.x; y = pause_menu.INA.y; break;
    case 'arrow': 
        x = pause_menu.IAR.x; y = pause_menu.IAR.y; break;
    case 'stone': 
        x = pause_menu.IST.x; y = pause_menu.IST.y; break;
    case 'gravity': 
        x = pause_menu.IGR.x; y = pause_menu.IGR.y; break;
    case 'charge': 
        x = pause_menu.ICH.x; y = pause_menu.ICH.y; break;
    case 'star': 
        x = pause_menu.ISR.x; y = pause_menu.ISR.y; break;
}

//Set input
if (global.input == 0)
{
KEYHOLD_UP = keyboard_check(global.key_up);
KEYHOLD_DOWN = keyboard_check(global.key_down);
KEYHOLD_LEFT = keyboard_check(global.key_left);
KEYHOLD_RIGHT = keyboard_check(global.key_right);
KEYHOLD_A = keyboard_check(global.key_a);
KEYHOLD_START = keyboard_check(global.key_start);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!canmove) {exit;}

//Set Input
if (global.input == 0)
{
KEYHOLD_UP = keyboard_check(global.key_up);
KEYHOLD_DOWN = keyboard_check(global.key_down);
KEYHOLD_LEFT = keyboard_check(global.key_left);
KEYHOLD_RIGHT = keyboard_check(global.key_right);
KEYHOLD_A = keyboard_check(global.key_a);
KEYHOLD_START = keyboard_check(global.key_start);
}

//Press
if (KEYHOLD_START &amp;&amp; press_start == 0) {press_start = 1; event_user(0); exit;}
if (KEYHOLD_A &amp;&amp; press_a == 0) {press_a = 1; event_user(0); exit;}
if (KEYHOLD_LEFT &amp;&amp; press_left == 0) {press_left = 1; event_user(1);}
if (KEYHOLD_UP &amp;&amp; press_up == 0) {press_up = 1; event_user(2);}
if (KEYHOLD_RIGHT &amp;&amp; press_right == 0) {press_right = 1; event_user(3);}
if (KEYHOLD_DOWN &amp;&amp; press_down == 0) {press_down = 1; event_user(4);}

//Release
if (!KEYHOLD_START &amp;&amp; press_start == 1) {press_start = 0;}
if (!KEYHOLD_A &amp;&amp; press_a == 1) {press_a = 0;}
if (!KEYHOLD_LEFT &amp;&amp; press_left == 1) {press_left = 0;}
if (!KEYHOLD_UP &amp;&amp; press_up == 1) {press_up = 0;}
if (!KEYHOLD_RIGHT &amp;&amp; press_right == 1) {press_right = 0;}
if (!KEYHOLD_DOWN &amp;&amp; press_down == 1) {press_down = 0;}

//Check current weapon
if (x == pm.IPR.x &amp;&amp; y == pm.IPR.y) {global.currentweapon = 'normal';}
if (x == pm.IWA.x &amp;&amp; y == pm.IWA.y) {global.currentweapon = 'wave';}
if (x == pm.IGY.x &amp;&amp; y == pm.IGY.y) {global.currentweapon = 'gyro';}
if (x == pm.ICR.x &amp;&amp; y == pm.ICR.y) {global.currentweapon = 'crystal';}
if (x == pm.INA.x &amp;&amp; y == pm.INA.y) {global.currentweapon = 'napalm';}
if (x == pm.IAR.x &amp;&amp; y == pm.IAR.y) {global.currentweapon = 'arrow';}
if (x == pm.IST.x &amp;&amp; y == pm.IST.y) {global.currentweapon = 'stone';}
if (x == pm.IGR.x &amp;&amp; y == pm.IGR.y) {global.currentweapon = 'gravity';}
if (x == pm.ICH.x &amp;&amp; y == pm.ICH.y) {global.currentweapon = 'charge';}
if (x == pm.ISR.x &amp;&amp; y == pm.ISR.y) {global.currentweapon = 'star';}

if (x == pm.ET.x &amp;&amp; y == pm.ET.y) {global.currentweapon = 'normal';}
if (x == pm.MT.x &amp;&amp; y == pm.MT.y) {global.currentweapon = 'normal';}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Used E-Tank
if (alarmfill &gt; -1) 
{
    alarmfill -= 1;
    if (alarmfill == -1) 
    {
        alarmfill = 1;
        if (global.health &lt; 28)
        {
            global.health+=1;
        }
        else 
        {
            sound_stop(sfx_getenergy);
            alarmfill = -1;
            global.tanks_e -= 1;
            canmove = true;
            event_user(15);
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (weaponquestion)
{
    case 'normal': 
        x = pause_menu.IPR.x; y = pause_menu.IPR.y; break;
    case 'wave': 
        x = pause_menu.IWA.x; y = pause_menu.IWA.y; break;
    case 'gyro': 
        x = pause_menu.IGY.x; y = pause_menu.IGY.y; break;
    case 'crystal': 
        x = pause_menu.ICR.x; y = pause_menu.ICR.y; break;
    case 'napalm': 
        x = pause_menu.INA.x; y = pause_menu.INA.y; break;
    case 'arrow': 
        x = pause_menu.IAR.x; y = pause_menu.IAR.y; break;
    case 'stone': 
        x = pause_menu.IST.x; y = pause_menu.IST.y; break;
    case 'gravity': 
        x = pause_menu.IGR.x; y = pause_menu.IGR.y; break;
    case 'charge': 
        x = pause_menu.ICH.x; y = pause_menu.ICH.y; break;
    case 'star': 
        x = pause_menu.ISR.x; y = pause_menu.ISR.y; break;
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Down

if (x == pm.IPR.x &amp;&amp; y == pm.IPR.y)  
{
if (pm.IWA.visible=1) {x=pm.IWA.x; y=pm.IWA.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.IGY.visible=1) {x=pm.IGY.x; y=pm.IGY.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.ICR.visible=1) {x=pm.ICR.x; y=pm.ICR.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.INA.visible=1) {x=pm.INA.x; y=pm.INA.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.ET.visible=1) {x=pm.ET.x; y=pm.ET.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
}

if (x == pm.IWA.x &amp;&amp; y == pm.IWA.y) 
{
if (pm.IGY.visible=1) {x=pm.IGY.x; y=pm.IGY.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.ICR.visible=1) {x=pm.ICR.x; y=pm.ICR.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.INA.visible=1) {x=pm.INA.x; y=pm.INA.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.ET.visible=1) {x=pm.ET.x; y=pm.ET.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
}

if (x == pm.IGY.x &amp;&amp; y == pm.IGY.y) 
{
if (pm.ICR.visible=1) {x=pm.ICR.x; y=pm.ICR.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.INA.visible=1) {x=pm.INA.x; y=pm.INA.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.ET.visible=1) {x=pm.ET.x; y=pm.ET.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
}

if (x == pm.ICR.x &amp;&amp; y == pm.ICR.y) 
{
if (pm.INA.visible=1) {x=pm.INA.x; y=pm.INA.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.ET.visible=1) {x=pm.ET.x; y=pm.ET.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
}

if (x == pm.INA.x &amp;&amp; y == pm.INA.y)  
{
if (pm.ET.visible=1) {x=pm.ET.x; y=pm.ET.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
}

if (x == pm.ET.x &amp;&amp; y == pm.ET.y) 
{
if (pm.IPR.visible=1) {x=pm.IPR.x; y=pm.IPR.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
}
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////

if (x == pm.IAR.x &amp;&amp; y == pm.IAR.y) 
{
if (pm.IST.visible=1) {x=pm.IST.x; y=pm.IST.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.IGR.visible=1) {x=pm.IGR.x; y=pm.IGR.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.ICH.visible=1) {x=pm.ICH.x; y=pm.ICH.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.ISR.visible=1) {x=pm.ISR.x; y=pm.ISR.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.MT.visible=1) {x=pm.MT.x; y=pm.MT.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
}

if (x == pm.IST.x &amp;&amp; y == pm.IST.y)  
{
if (pm.IGR.visible=1) {x=pm.IGR.x; y=pm.IGR.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.ICH.visible=1) {x=pm.ICH.x; y=pm.ICH.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.ISR.visible=1) {x=pm.ISR.x; y=pm.ISR.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.MT.visible=1) {x=pm.MT.x; y=pm.MT.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
}

if (x == pm.IGR.x &amp;&amp; y == pm.IGR.y)  
{
if (pm.ICH.visible=1) {x=pm.ICH.x; y=pm.ICH.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.ISR.visible=1) {x=pm.ISR.x; y=pm.ISR.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.MT.visible=1) {x=pm.MT.x; y=pm.MT.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
}

if (x == pm.ICH.x &amp;&amp; y == pm.ICH.y) 
{
if (pm.ISR.visible=1) {x=pm.ISR.x; y=pm.ISR.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
else
if (pm.MT.visible=1) {x=pm.MT.x; y=pm.MT.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
}

if (x == pm.ISR.x &amp;&amp; y == pm.ISR.y) 
{
if (pm.MT.visible=1) {x=pm.MT.x; y=pm.MT.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
}

if (x == pm.MT.x &amp;&amp; y == pm.MT.y)  
{
if (pm.IAR.visible=1) {x=pm.IAR.x; y=pm.IAR.y; sound_stop(sfx_select); sound_play(sfx_select); exit}
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Right

if (x == pm.IPR.x &amp;&amp; y == pm.IPR.y) 
{
x=pm.IAR.x; y=pm.IAR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;
}

if (x == pm.IWA.x &amp;&amp; y == pm.IWA.y)  
{
if (pm.IST.visible=1) {x=pm.IST.x; y=pm.IST.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IGR.visible=1) {x=pm.IGR.x; y=pm.IGR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ICH.visible=1) {x=pm.ICH.x; y=pm.ICH.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ISR.visible=1) {x=pm.ISR.x; y=pm.ISR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IAR.visible=1) {x=pm.IAR.x; y=pm.IAR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.IGY.x &amp;&amp; y == pm.IGY.y)  
{
if (pm.IGR.visible=1) {x=pm.IGR.x; y=pm.IGR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ICH.visible=1) {x=pm.ICH.x; y=pm.ICH.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ISR.visible=1) {x=pm.ISR.x; y=pm.ISR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IST.visible=1) {x=pm.IST.x; y=pm.IST.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IAR.visible=1) {x=pm.IAR.x; y=pm.IAR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.ICR.x &amp;&amp; y == pm.ICR.y)  
{
if (pm.ICH.visible=1) {x=pm.ICH.x; y=pm.ICH.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ISR.visible=1) {x=pm.ISR.x; y=pm.ISR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IGR.visible=1) {x=pm.IGR.x; y=pm.IGR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IST.visible=1) {x=pm.IST.x; y=pm.IST.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IAR.visible=1) {x=pm.IAR.x; y=pm.IAR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.INA.x &amp;&amp; y == pm.INA.y)  
{
if (pm.ISR.visible=1) {x=pm.ISR.x; y=pm.ISR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ICH.visible=1) {x=pm.ICH.x; y=pm.ICH.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IGR.visible=1) {x=pm.IGR.x; y=pm.IGR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IST.visible=1) {x=pm.IST.x; y=pm.IST.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IAR.visible=1) {x=pm.IAR.x; y=pm.IAR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////

if (x == pm.IAR.x &amp;&amp; y == pm.IAR.y) 
{
x=pm.IPR.x; y=pm.IPR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;
}

if (x == pm.IST.x &amp;&amp; y == pm.IST.y)  
{
if (pm.IWA.visible=1) {x=pm.IWA.x; y=pm.IWA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IGY.visible=1) {x=pm.IGY.x; y=pm.IGY.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ICR.visible=1) {x=pm.ICR.x; y=pm.ICR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.INA.visible=1) {x=pm.INA.x; y=pm.INA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IPR.visible=1) {x=pm.IPR.x; y=pm.IPR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.IGR.x &amp;&amp; y == pm.IGR.y)  
{
if (pm.IGY.visible=1) {x=pm.IGY.x; y=pm.IGY.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ICR.visible=1) {x=pm.ICR.x; y=pm.ICR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.INA.visible=1) {x=pm.INA.x; y=pm.INA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IWA.visible=1) {x=pm.IWA.x; y=pm.IWA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IPR.visible=1) {x=pm.IPR.x; y=pm.IPR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.ICH.x &amp;&amp; y == pm.ICH.y) 
{
if (pm.ICR.visible=1) {x=pm.ICR.x; y=pm.ICR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.INA.visible=1) {x=pm.INA.x; y=pm.INA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IGY.visible=1) {x=pm.IGY.x; y=pm.IGY.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IWA.visible=1) {x=pm.IWA.x; y=pm.IWA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IPR.visible=1) {x=pm.IPR.x; y=pm.IPR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.ISR.x &amp;&amp; y == pm.ISR.y) 
{
if (pm.INA.visible=1) {x=pm.INA.x; y=pm.INA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ICR.visible=1) {x=pm.ICR.x; y=pm.ICR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IGY.visible=1) {x=pm.IGY.x; y=pm.IGY.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IWA.visible=1) {x=pm.IWA.x; y=pm.IWA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IPR.visible=1) {x=pm.IPR.x; y=pm.IPR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.ET.x &amp;&amp; y == pm.ET.y) {x=pm.MT.x; y=pm.MT.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
if (x == pm.MT.x &amp;&amp; y == pm.MT.y) {x=pm.ET.x; y=pm.ET.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Up

if (x == pm.IPR.x &amp;&amp; y == pm.IPR.y) 
{
if (pm.ET.visible=1) {x=pm.ET.x; y=pm.ET.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.IWA.x &amp;&amp; y == pm.IWA.y) 
{
if (pm.IPR.visible=1) {x=pm.IPR.x; y=pm.IPR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.IGY.x &amp;&amp; y == pm.IGY.y) 
{
if (pm.IWA.visible=1) {x=pm.IWA.x; y=pm.IWA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IPR.visible=1) {x=pm.IPR.x; y=pm.IPR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.ICR.x &amp;&amp; y == pm.ICR.y) 
{
if (pm.IGY.visible=1) {x=pm.IGY.x; y=pm.IGY.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IWA.visible=1) {x=pm.IWA.x; y=pm.IWA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IPR.visible=1) {x=pm.IPR.x; y=pm.IPR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.INA.x &amp;&amp; y == pm.INA.y)  
{
if (pm.ICR.visible=1) {x=pm.ICR.x; y=pm.ICR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IGY.visible=1) {x=pm.IGY.x; y=pm.IGY.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IWA.visible=1) {x=pm.IWA.x; y=pm.IWA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IPR.visible=1) {x=pm.IPR.x; y=pm.IPR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.ET.x &amp;&amp; y == pm.ET.y) 
{
if (pm.INA.visible=1) {x=pm.INA.x; y=pm.INA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ICR.visible=1) {x=pm.ICR.x; y=pm.ICR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IGY.visible=1) {x=pm.IGY.x; y=pm.IGY.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IWA.visible=1) {x=pm.IWA.x; y=pm.IWA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IPR.visible=1) {x=pm.IPR.x; y=pm.IPR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////

if (x == pm.IAR.x &amp;&amp; y == pm.IAR.y) 
{
if (pm.MT.visible=1) {x=pm.MT.x; y=pm.MT.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.IST.x &amp;&amp; y == pm.IST.y)  
{
if (pm.IAR.visible=1) {x=pm.IAR.x; y=pm.IAR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.IGR.x &amp;&amp; y == pm.IGR.y) 
{
if (pm.IST.visible=1) {x=pm.IST.x; y=pm.IST.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IAR.visible=1) {x=pm.IAR.x; y=pm.IAR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.ICH.x &amp;&amp; y == pm.ICH.y)  
{
if (pm.IGR.visible=1) {x=pm.IGR.x; y=pm.IGR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IST.visible=1) {x=pm.IST.x; y=pm.IST.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IAR.visible=1) {x=pm.IAR.x; y=pm.IAR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.ISR.x &amp;&amp; y == pm.ISR.y)  
{
if (pm.ICH.visible=1) {x=pm.ICH.x; y=pm.ICH.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IGR.visible=1) {x=pm.IGR.x; y=pm.IGR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IST.visible=1) {x=pm.IST.x; y=pm.IST.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IAR.visible=1) {x=pm.IAR.x; y=pm.IAR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.MT.x &amp;&amp; y == pm.MT.y)  
{
if (pm.ISR.visible=1) {x=pm.ISR.x; y=pm.ISR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ICH.visible=1) {x=pm.ICH.x; y=pm.ICH.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IGR.visible=1) {x=pm.IGR.x; y=pm.IGR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IST.visible=1) {x=pm.IST.x; y=pm.IST.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IAR.visible=1) {x=pm.IAR.x; y=pm.IAR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Left

if (x == pm.IPR.x &amp;&amp; y == pm.IPR.y) 
{
x=pm.IAR.x; y=pm.IAR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;
}

if (x == pm.IWA.x &amp;&amp; y == pm.IWA.y)  
{
if (pm.IST.visible=1) {x=pm.IST.x; y=pm.IST.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IGR.visible=1) {x=pm.IGR.x; y=pm.IGR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ICH.visible=1) {x=pm.ICH.x; y=pm.ICH.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ISR.visible=1) {x=pm.ISR.x; y=pm.ISR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IAR.visible=1) {x=pm.IAR.x; y=pm.IAR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.IGY.x &amp;&amp; y == pm.IGY.y)
{
if (pm.IGR.visible=1) {x=pm.IGR.x; y=pm.IGR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ICH.visible=1) {x=pm.ICH.x; y=pm.ICH.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ISR.visible=1) {x=pm.ISR.x; y=pm.ISR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IST.visible=1) {x=pm.IST.x; y=pm.IST.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IAR.visible=1) {x=pm.IAR.x; y=pm.IAR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.ICR.x &amp;&amp; y == pm.ICR.y)  
{
if (pm.ICH.visible=1) {x=pm.ICH.x; y=pm.ICH.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ISR.visible=1) {x=pm.ISR.x; y=pm.ISR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IGR.visible=1) {x=pm.IGR.x; y=pm.IGR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IST.visible=1) {x=pm.IST.x; y=pm.IST.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IAR.visible=1) {x=pm.IAR.x; y=pm.IAR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.INA.x &amp;&amp; y == pm.INA.y)  
{
if (pm.ISR.visible=1) {x=pm.ISR.x; y=pm.ISR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ICH.visible=1) {x=pm.ICH.x; y=pm.ICH.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IGR.visible=1) {x=pm.IGR.x; y=pm.IGR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IST.visible=1) {x=pm.IST.x; y=pm.IST.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IAR.visible=1) {x=pm.IAR.x; y=pm.IAR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////
////////////////////////////////////////////////////////

if (x == pm.IAR.x &amp;&amp; y == pm.IAR.y) 
{
x=pm.IPR.x; y=pm.IPR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;
}

if (x == pm.IST.x &amp;&amp; y == pm.IST.y)  
{
if (pm.IWA.visible=1) {x=pm.IWA.x; y=pm.IWA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IGY.visible=1) {x=pm.IGY.x; y=pm.IGY.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ICR.visible=1) {x=pm.ICR.x; y=pm.ICR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.INA.visible=1) {x=pm.INA.x; y=pm.INA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IPR.visible=1) {x=pm.IPR.x; y=pm.IPR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.IGR.x &amp;&amp; y == pm.IGR.y)  
{
if (pm.IGY.visible=1) {x=pm.IGY.x; y=pm.IGY.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ICR.visible=1) {x=pm.ICR.x; y=pm.ICR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.INA.visible=1) {x=pm.INA.x; y=pm.INA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IWA.visible=1) {x=pm.IWA.x; y=pm.IWA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IPR.visible=1) {x=pm.IPR.x; y=pm.IPR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.ICH.x &amp;&amp; y == pm.ICH.y) 
{
if (pm.ICR.visible=1) {x=pm.ICR.x; y=pm.ICR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.INA.visible=1) {x=pm.INA.x; y=pm.INA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IGY.visible=1) {x=pm.IGY.x; y=pm.IGY.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IWA.visible=1) {x=pm.IWA.x; y=pm.IWA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IPR.visible=1) {x=pm.IPR.x; y=pm.IPR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.ISR.x &amp;&amp; y == pm.ISR.y) 
{
if (pm.INA.visible=1) {x=pm.INA.x; y=pm.INA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.ICR.visible=1) {x=pm.ICR.x; y=pm.ICR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IGY.visible=1) {x=pm.IGY.x; y=pm.IGY.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IWA.visible=1) {x=pm.IWA.x; y=pm.IWA.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
else
if (pm.IPR.visible=1) {x=pm.IPR.x; y=pm.IPR.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
}

if (x == pm.ET.x &amp;&amp; y == pm.ET.y) {x=pm.MT.x; y=pm.MT.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}

if (x == pm.MT.x &amp;&amp; y == pm.MT.y) {x=pm.ET.x; y=pm.ET.y; sound_stop(sfx_select); sound_play(sfx_select); exit;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Start
if (canmove == true)
{
canmove = false;

if (x == pm.ET.x &amp;&amp; y == pm.ET.y) 
{
    if (global.tanks_e &gt; 0 &amp;&amp; global.health &lt; 28) {alarmfill = 1; sound_loop(sfx_getenergy); } 
    else {canmove = true; } 
    exit;
}

if (x == pm.MT.x &amp;&amp; y == pm.MT.y) 
{
    canmove = true;
    exit; //Sorry- no M-Tanks in this build. ;)
}

instance_create(view_xview,view_yview,fadeout_pause);
fadeout_pause.pausevalue = 0;
sound_play(sfx_selected);

}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
